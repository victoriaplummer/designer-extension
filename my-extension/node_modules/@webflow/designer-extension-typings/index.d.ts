/// <reference path="./styles.d.ts" />
/// <reference path="./pages.d.ts" />
/// <reference path="./elements.d.ts" />

declare global {
  const webflow: WebflowApi;
}

interface WebflowApi {
  getSiteInfo(): Promise<{siteId: string; siteName: string}>;
  getSelectedElement(): Promise<null | AnyElement>;
  getMediaQuery(): Promise<BreakpointId>;
  getAllElements(): Promise<Array<AnyElement>>;
  createStyle(name: string): Style;
  getStyleByName(name: string): Promise<null | Style>;
  getAllStyles(): Promise<Array<Style>>;
  getCurrentPage(): Promise<Page>;
  getAllPagesAndFolders(): Promise<Array<Page | Folder>>;
  createFolder(): Promise<Folder>;
  createPage(): Promise<Page>;
  switchPage(page: Page): Promise<void>;
  createString(text: string): StringElement;
  createDOM(tag: string): DOMElement;
  createHeading(tag: 1 | 2 | 3 | 4 | 5 | 6): HeadingElement;
  notify(opts: {
    type: 'Error' | 'Info' | 'Success';
    message: string;
  }): Promise<void>;
  subscribe(
    event: 'selectedelement',
    callback: (element: null | AnyElement) => void
  ): Unsubscribe;
  subscribe(
    event: 'mediaquery',
    callback: (breakpoint: BreakpointId) => void
  ): Unsubscribe;
  subscribe(event: 'currentpage', callback: (page: Page) => void): Unsubscribe;
}

type Unsubscribe = () => undefined;

export {};
